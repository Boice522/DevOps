# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog     
    option                  dontlognull 
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    stats refresh 30  
    retries                 3     
    balance roundrobin  
    #balance source     
    #balance leastconn  
    timeout http-request    10s   
    timeout queue           1m    
    #timeout queue定义放入这个队列的超时时间。
    timeout connect         10s   
    timeout client          1m    
    timeout server          1m    
    timeout http-keep-alive 10s   
    timeout check           10s   
    maxconn                 3000  

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend kubernetes
    mode                 tcp
    bind                 *:{{ vip_port  }}
    option               tcplog
    default_backend      kubernetes-apiserver   
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend kubernetes-apiserver  
    mode        tcp
    balance     roundrobin
    {% for host in groups['master'] %}
    server  {{ hostvars[host].node_name }} {{ hostvars[host].inventory_hostname }}:6443 check
    {% endfor %}
 
#---------------------------------------------------------------------
# collection haproxy statistics message
#---------------------------------------------------------------------
listen admin_stats
    bind                 *:{{ ha_stats_port }}               
    mode http                                    
    stats auth           admin:admin            
    stats refresh        5s                     
    stats realm          k8sHA\ Statistics      
    stats uri            /admin?stats            
    stats hide-version                         
